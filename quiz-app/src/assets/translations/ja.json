[
	{
		"title": "初心者のための Web 開発: クイズ",
		"complete": "おめでとうございます! クイズをクリアしました。",
		"error": "申し訳ありませんが、もう一度お試しください。",
		"quizzes": [
			{
				"id": 1,
				"title": "レッスン 1 - プログラミング言語入門: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "作成者がコードを書かなくてもプログラムを作成できる",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "低階層の言語がポピュラーなのは",
						"answerOptions": [
							{
								"answerText": "Web サイト",
								"isCorrect": "false"
							},
							{
								"answerText": "ハードウェア",
								"isCorrect": "true"
							},
							{
								"answerText": "ビデオゲームソフト",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "Web 開発者の環境で一番ありそうなツールはどれでしょうか?",
						"answerOptions": [
							{
								"answerText": "Raspberry Pi のようなハードウェア",
								"isCorrect": "false"
							},
							{
								"answerText": "ブラウザの開発者ツール",
								"isCorrect": "true"
							},
							{
								"answerText": "オペレーティングシステムのドキュメント",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 2,
				"title": "レッスン 1 - プログラミング言語入門: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "Web サイトを作成する際には、どのような言葉を使うことが多いのでしょうか?",
						"answerOptions": [
							{
								"answerText": "マシンコード",
								"isCorrect": "false"
							},
							{
								"answerText": "JavaScript",
								"isCorrect": "true"
							},
							{
								"answerText": "Bash",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "開発環境は開発者ごとに異なる。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "開発者はバグのあるコードを修正するために何をするのでしょうか？",
						"answerOptions": [
							{
								"answerText": "シンタックスハイライト",
								"isCorrect": "false"
							},
							{
								"answerText": "デバッグ",
								"isCorrect": "true"
							},
							{
								"answerText": "コードフォーマット",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 3,
				"title": "レッスン 2 - GitHub 入門: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "Git のリポジトリはどうやって作るのでしょうか？",
						"answerOptions": [
							{
								"answerText": "git create",
								"isCorrect": "false"
							},
							{
								"answerText": "git start",
								"isCorrect": "false"
							},
							{
								"answerText": "git init",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "git add は何をするのでしょうか？",
						"answerOptions": [
							{
								"answerText": "コードをコミットします。",
								"isCorrect": "false"
							},
							{
								"answerText": "ファイルをトラッキング用のステージングエリアに追加します。",
								"isCorrect": "true"
							},
							{
								"answerText": "ファイルを GitHub に追加します。",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "gitがインストールされているかどうかを確認する方法は?",
						"answerOptions": [
							{
								"answerText": "git --version と入力します。",
								"isCorrect": "true"
							},
							{
								"answerText": "git --installed と入力します。",
								"isCorrect": "false"
							},
							{
								"answerText": "git --init と入力します。",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 4,
				"title": "レッスン 2 - GitHub 入門: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "ブランチで導入された違いをレビュー、コメント、統合テストなどで比較検討する場所は",
						"answerOptions": [
							{
								"answerText": "GitHub",
								"isCorrect": "false"
							},
							{
								"answerText": "プルリクエスト",
								"isCorrect": "true"
							},
							{
								"answerText": "feature ブランチ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "リモートブランチからすべてのコミットを取得するには?",
						"answerOptions": [
							{
								"answerText": "git fetch",
								"isCorrect": "false"
							},
							{
								"answerText": "git pull",
								"isCorrect": "true"
							},
							{
								"answerText": "git commits -r",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "ブランチを切り替えるにはどうしたらいいですか?",
						"answerOptions": [
							{
								"answerText": "git switch [ブランチ名]",
								"isCorrect": "false"
							},
							{
								"answerText": "git checkout [ブランチ名]",
								"isCorrect": "true"
							},
							{
								"answerText": "git load [ブランチ名]",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 5,
				"title": "レッスン 3 - アクセシブルな Web ページの作成: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "アクセシブルな Web サイトかどうかは、どのブラウザツールで確認することができますか?",
						"answerOptions": [
							{
								"answerText": "Lighthouse",
								"isCorrect": "true"
							},
							{
								"answerText": "Deckhouse",
								"isCorrect": "false"
							},
							{
								"answerText": "Cleanhouse",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "視覚障害者のアクセシビリティをテストするには、物理的なスクリーンリーダーが必要です。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "アクセシビリティが重要なのは、政府機関の Web サイトだけ",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 6,
				"title": "レッスン 3 - アクセシブルな Web ページの作成: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "Lighthouse はアクセシビリティの問題をチェックするだけ",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "カラーセーフパレットは、以下のような人に役立ちます。",
						"answerOptions": [
							{
								"answerText": "色覚異常",
								"isCorrect": "false"
							},
							{
								"answerText": "視覚障害",
								"isCorrect": "false"
							},
							{
								"answerText": "両方",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "記述的なリンクは、アクセシブルな Web サイトには不可欠です。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 7,
				"title": "レッスン 4 - JavaScript の基本 - データ型: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "ブール値は、文字列の長さをテストするために使用できるデータ型です。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "文字列に対して実行できる操作は次の通りです。",
						"answerOptions": [
							{
								"answerText": "concatenation",
								"isCorrect": "true"
							},
							{
								"answerText": "appending",
								"isCorrect": "false"
							},
							{
								"answerText": "splicing",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "== と === は互換性があります。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 8,
				"title": "レッスン 4 - JavaScript の基本 - データ型: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "定数は変数を宣言するための let や var と同じですが、",
						"answerOptions": [
							{
								"answerText": "定数は初期化されていなければなりません。",
								"isCorrect": "true"
							},
							{
								"answerText": "定数を変更することができます。",
								"isCorrect": "false"
							},
							{
								"answerText": "定数は再代入が可能です。",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "Numbers と ____ は、数値データを扱う JavaScript プリミティブ型です。",
						"answerOptions": [
							{
								"answerText": "bigint",
								"isCorrect": "true"
							},
							{
								"answerText": "boolean",
								"isCorrect": "false"
							},
							{
								"answerText": "star",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "文字列は、シングルクォートとダブルクォートの間に存在することができます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 9,
				"title": "レッスン 5 - JavaScript の基本 - メソッドと関数: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "引数とは何でしょうか?",
						"answerOptions": [
							{
								"answerText": "関数の定義で宣言するものです。",
								"isCorrect": "false"
							},
							{
								"answerText": "呼び出し時に関数に渡すものです。",
								"isCorrect": "true"
							},
							{
								"answerText": "それは、あなたが知っている人と一緒に持っているものです。",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "関数は何かを返さなければなりません。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "関数には何でも名前を付けることができます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							},
							{
								"answerText": "はい。しかし記述的な名前でなければなりません。",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 10,
				"title": "レッスン 5 - JavaScript の基本 - メソッドと関数: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "引数は、関数内のすべてのパラメータに対して提供されなければなりません。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "デフォルト値は何をするのでしょうか？",
						"answerOptions": [
							{
								"answerText": "正しい値を設定します。",
								"isCorrect": "false"
							},
							{
								"answerText": "パラメータの引数を省略してもコードが動作するように、パラメータに初期値を与えます。",
								"isCorrect": "true"
							},
							{
								"answerText": "実用性を持ちません。",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "太いアロー関数でできることは",
						"answerOptions": [
							{
								"answerText": "重い関数を作成する",
								"isCorrect": "false"
							},
							{
								"answerText": "関数キーワードを省略する",
								"isCorrect": "true"
							},
							{
								"answerText": "匿名関数を作成する",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 11,
				"title": "レッスン 6 - JavaScript の基本 - 意思決定: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "次の演算子 == は",
						"answerOptions": [
							{
								"answerText": "等号",
								"isCorrect": "true"
							},
							{
								"answerText": "厳格な平等",
								"isCorrect": "false"
							},
							{
								"answerText": "割り当て",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "JavaScript での比較はどのような型を返しますか?",
						"answerOptions": [
							{
								"answerText": "boolean",
								"isCorrect": "true"
							},
							{
								"answerText": "null",
								"isCorrect": "false"
							},
							{
								"answerText": "string",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "JavaScript の ! 記号は、次のような意味です:",
						"answerOptions": [
							{
								"answerText": "論理否定",
								"isCorrect": "true"
							},
							{
								"answerText": "重要",
								"isCorrect": "false"
							},
							{
								"answerText": "等価",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 12,
				"title": "レッスン 6 - JavaScript の基本 - 意思決定: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "次のコードは何を返すでしょうか: '1' == 1",
						"answerOptions": [
							{
								"answerText": "true",
								"isCorrect": "true"
							},
							{
								"answerText": "false",
								"isCorrect": "false"
							},
							{
								"answerText": "null",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "次のコードは何を返すでしょうか: '1' === 1",
						"answerOptions": [
							{
								"answerText": "true",
								"isCorrect": "false"
							},
							{
								"answerText": "false",
								"isCorrect": "true"
							},
							{
								"answerText": "null",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "'or' 論理を表現する正しい演算子を選んでください。",
						"answerOptions": [
							{
								"answerText": "a | b",
								"isCorrect": "false"
							},
							{
								"answerText": "a || b",
								"isCorrect": "true"
							},
							{
								"answerText": "a or b",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 13,
				"title": "レッスン 7 - JavaScript の基本 - 配列とループ: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "配列内の特定の項目を参照するには",
						"answerOptions": [
							{
								"answerText": "角括弧 []",
								"isCorrect": "false"
							},
							{
								"answerText": "インデックス",
								"isCorrect": "true"
							},
							{
								"answerText": "中括弧 {}",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "配列の項目数を取得するには？",
						"answerOptions": [
							{
								"answerText": "'len(array)' メソッド",
								"isCorrect": "false"
							},
							{
								"answerText": "配列上のプロパティサイズ",
								"isCorrect": "false"
							},
							{
								"answerText": "配列の length プロパティ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "JavaScript では、インデックスの始まりは",
						"answerOptions": [
							{
								"answerText": "0",
								"isCorrect": "true"
							},
							{
								"answerText": "1",
								"isCorrect": "false"
							},
							{
								"answerText": "2",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 14,
				"title": "レッスン 7 - JavaScript の基本 - 配列とループ: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "for ループのどの部分を修正して、その繰り返しを5つ増やす必要がありますか?",
						"answerOptions": [
							{
								"answerText": "条件",
								"isCorrect": "true"
							},
							{
								"answerText": "カウンター",
								"isCorrect": "false"
							},
							{
								"answerText": "くり返し式",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "whilte と for ループの違いは?",
						"answerOptions": [
							{
								"answerText": "for ループにはカウンタと反復式があり、while には条件があるだけです。",
								"isCorrect": "true"
							},
							{
								"answerText": "while にはカウンタと反復式があり、for ループには条件があるだけです。",
								"isCorrect": "false"
							},
							{
								"answerText": "それらは同じであり、お互いの別名に過ぎません。",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "for (let i=1; i < 5; i++) というコードがあるとすると、それは何回繰り返し実行されますか？",
						"answerOptions": [
							{
								"answerText": "5",
								"isCorrect": "false"
							},
							{
								"answerText": "4",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 15,
				"title": "レッスン 8 - テラリウムプロジェクト - HTML 入門: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "HTML は 'HyperText Mockup Language' の略です。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "すべての HTML タグは、開始タグと終了タグの両方を必要とします。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "意味的なマークアップを使用することが最も重要なのは",
						"answerOptions": [
							{
								"answerText": "コードの読みやすさ",
								"isCorrect": "false"
							},
							{
								"answerText": "スクリーンリーダー",
								"isCorrect": "true"
							},
							{
								"answerText": "保守性",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 16,
				"title": "レッスン 8 - テラリウムプロジェクト - HTML 入門: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "Span と Div は互換性があります。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "HTML ドキュメントの head には、次のようなものが含まれています:",
						"answerOptions": [
							{
								"answerText": "title タグ",
								"isCorrect": "false"
							},
							{
								"answerText": "metadata",
								"isCorrect": "false"
							},
							{
								"answerText": "上記のすべて",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "マークアップで非推奨のタグを使用することはできません。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ。ただし正当な理由で非推奨とされています。",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 17,
				"title": "レッスン 9  - テラリウムプロジェクト - CSS 入門: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "HTML 要素がスタイルされるためには、クラスか id のどちらかを持っていなければなりません。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "CSS は 'Complete Style Sheets' の略です。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "CSS を使ってアニメーションを作成することができます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 18,
				"title": "レッスン 9 - テラリウムプロジェクト - CSS 入門: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "HTML ファイルの head セクションに直接 CSS を書くことができます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "アプリには必ず CSS を含める必要があります。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ。しかし、見栄えを良くするには CSS が必要でしょう。",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "CSS の検査に使えるブラウザツールは?",
						"answerOptions": [
							{
								"answerText": "Elements",
								"isCorrect": "false"
							},
							{
								"answerText": "Styles",
								"isCorrect": "true"
							},
							{
								"answerText": "Network",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 19,
				"title": "レッスン 10 - テラリウムプロジェクト - DOM の操作とクロージャ: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "DOM は 'Document Object Management' の略です。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "DOM はツリーと考えられる",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "Web API を使用すると、DOM を操作することができます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 20,
				"title": "レッスン 10 - テラリウムプロジェクト - DOM の操作とクロージャ: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "DOM は、Web 上でドキュメントを表現するためのモデルです。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "JavaScript のクロージャを使用して、以下を実行します:",
						"answerOptions": [
							{
								"answerText": "関数内に関数を書き込みます。",
								"isCorrect": "true"
							},
							{
								"answerText": "DOM を囲みます。",
								"isCorrect": "false"
							},
							{
								"answerText": "スクリプトブロックを閉じます。",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "空欄を埋めてください: 1つ以上の関数が外部関数の...にアクセスする必要がある場合に便利です。",
						"answerOptions": [
							{
								"answerText": "配列",
								"isCorrect": "false"
							},
							{
								"answerText": "スコープ",
								"isCorrect": "true"
							},
							{
								"answerText": "関数",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 21,
				"title": "レッスン 11 - タイピングゲーム: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "イベント駆動型のプログラミングは、ユーザーが",
						"answerOptions": [
							{
								"answerText": "ボタンをクリックしたとき",
								"isCorrect": "false"
							},
							{
								"answerText": "値を変更したとき",
								"isCorrect": "false"
							},
							{
								"answerText": "ページと相互にやりとりしたとき",
								"isCorrect": "false"
							},
							{
								"answerText": "上記のいずれか",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "手続き型プログラミングでは、関数は",
						"answerOptions": [
							{
								"answerText": "いつでも呼び出されます。",
								"isCorrect": "false"
							},
							{
								"answerText": "特定の順序で呼び出されます。",
								"isCorrect": "true"
							},
							{
								"answerText": "左から右へと呼び出されます。",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "イベントハンドラを登録するために DOM で公開されているユニバーサルメソッドは",
						"answerOptions": [
							{
								"answerText": "addEventListener",
								"isCorrect": "true"
							},
							{
								"answerText": "addListener",
								"isCorrect": "false"
							},
							{
								"answerText": "addEvent",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 22,
				"title": "レッスン 11 - タイピングゲーム: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "ユーザーがページ上で何かをするだけで、イベントが発生します。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "よくあるイベントには以下のものがあります。",
						"answerOptions": [
							{
								"answerText": "click_event",
								"isCorrect": "false"
							},
							{
								"answerText": "select_event",
								"isCorrect": "false"
							},
							{
								"answerText": "input_event",
								"isCorrect": "false"
							},
							{
								"answerText": "これら全て",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "匿名関数を使用してイベントハンドラを作成することができます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 23,
				"title": "レッスン 12 - ブラウザ拡張機能プロジェクト - ブラウザについて: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "ブラウザの拡張機能を取得できるのは",
						"answerOptions": [
							{
								"answerText": "ウォルマート",
								"isCorrect": "false"
							},
							{
								"answerText": "ブラウザの拡張機能ストア",
								"isCorrect": "true"
							},
							{
								"answerText": "App store",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "NPM とは",
						"answerOptions": [
							{
								"answerText": "Node Package Manager",
								"isCorrect": "true"
							},
							{
								"answerText": "Netscape Primary Mix",
								"isCorrect": "false"
							},
							{
								"answerText": "Natural Processing Manager",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "お使いのブラウザは、安全な Web ページと安全でない Web ページを提供することができます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 24,
				"title": "レッスン 12 - ブラウザ拡張機能プロジェクト - ブラウザについて: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "World Wide Web (ワールドワイドウェブ) の発明者は",
						"answerOptions": [
							{
								"answerText": "トム・バーナード=ロフト",
								"isCorrect": "false"
							},
							{
								"answerText": "ティム・バーナーズ=リー",
								"isCorrect": "true"
							},
							{
								"answerText": "トリッシュ バース=プール",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "最初のブラウザは",
						"answerOptions": [
							{
								"answerText": "WorldWideWeb",
								"isCorrect": "true"
							},
							{
								"answerText": "Mozilla",
								"isCorrect": "false"
							},
							{
								"answerText": "Netscape",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "ブラウザはユーザーの閲覧履歴を保存することができます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 25,
				"title": "レッスン 13 - ブラウザ拡張機能プロジェクト - API の呼び出し、ローカルストレージの使用: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "API とは",
						"answerOptions": [
							{
								"answerText": "Application Programming Interfaces",
								"isCorrect": "true"
							},
							{
								"answerText": "A Programming Inference",
								"isCorrect": "false"
							},
							{
								"answerText": "Anti Proven Intentions",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "API を使用して",
						"answerOptions": [
							{
								"answerText": "別の Web で接続されたアセットとやりとりします。",
								"isCorrect": "false"
							},
							{
								"answerText": "データベースとやりとりします。",
								"isCorrect": "false"
							},
							{
								"answerText": "上記のいずれかを実行します。",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "誰でも API を作成することができます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 26,
				"title": "レッスン 13 - ブラウザ拡張機能プロジェクト - API の呼び出し、ローカルストレージの使用: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "ブラウザウィンドウを閉じるたびにローカルストレージがクリアされます。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "ブラウザのメインウィンドウは、ブラウザの拡張機能のローカルストレージを制御します。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "API コンテキストでの REST は、以下の略です。",
						"answerOptions": [
							{
								"answerText": "Representational State Transfer",
								"isCorrect": "true"
							},
							{
								"answerText": "Returning State Tasks",
								"isCorrect": "false"
							},
							{
								"answerText": "Rendering State To Browser",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 27,
				"title": "レッスン 14 - ブラウザ拡張機能プロジェクト - バックグラウンドタスクとパフォーマンスについて学ぶ: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "アプリのパフォーマンスをテストするには",
						"answerOptions": [
							{
								"answerText": "ブラウザのツールを使用します。",
								"isCorrect": "true"
							},
							{
								"answerText": "別のソフトウェアパッケージを使用します",
								"isCorrect": "false"
							},
							{
								"answerText": "手作業で行います",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "Web サイトの「パフォーマンス」は、次の内容を分析したものです。",
						"answerOptions": [
							{
								"answerText": "どのくらいの速さでロードされるか",
								"isCorrect": "false"
							},
							{
								"answerText": "コードの実行速度",
								"isCorrect": "false"
							},
							{
								"answerText": "上記のどちらも",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "全体的に、ここ数年の Web ページの「重さ」は",
						"answerOptions": [
							{
								"answerText": "軽くなっています。",
								"isCorrect": "false"
							},
							{
								"answerText": "重くなっています。",
								"isCorrect": "true"
							},
							{
								"answerText": "変わっていません。",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 28,
				"title": "レッスン 14 - ブラウザ拡張機能プロジェクト - バックグラウンドタスクとパフォーマンスについて学ぶ: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "サイトのパフォーマンスを向上させるには、プロファイラでキャッシュをクリアしてリロードします。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "ブラウザの拡張機能は本質的にパフォーマンスが高い。",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "パフォーマンスのボトルネックについて、次のように分析します。",
						"answerOptions": [
							{
								"answerText": "DOM 走査",
								"isCorrect": "false"
							},
							{
								"answerText": "JavaScript の最適化",
								"isCorrect": "false"
							},
							{
								"answerText": "アセット管理",
								"isCorrect": "false"
							},
							{
								"answerText": "上記のすべて",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 29,
				"title": "レッスン 15 - スペースゲーム - Introduction: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "JavaScript is an unpopular language for building games",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "Pub/Sub is a preferred pattern for managing the game's assets and flow",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "Object inheritance can be handled by either using classes or composition",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 30,
				"title": "レッスン 15 - スペースゲーム - Introduction: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "Classes rely on inheritance to ascribe to behaviors",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "Composition is the preferred design pattern for game objects",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "Pub/Sub stands for:",
						"answerOptions": [
							{
								"answerText": "Publish/Subscribe",
								"isCorrect": "true"
							},
							{
								"answerText": "Print/Staple",
								"isCorrect": "false"
							},
							{
								"answerText": "Publish/Sanitize",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 31,
				"title": "レッスン 16 - スペースゲーム - Draw Hero and Monsters to Canvas: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "The Canvas element is what you use to draw on a screen",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "You can only draw simple geometric shapes using the Canvas API",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "The point 0,0 is in the bottom left",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 32,
				"title": "レッスン 16 - スペースゲーム - Draw Hero and Monsters to Canvas: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "You can perform drawing operations directly on the Canvas",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "You listen to the onload event to know when an image has loaded asynchronously",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "You draw images onto a screen with an operation called:",
						"answerOptions": [
							{
								"answerText": "paintImage()",
								"isCorrect": "false"
							},
							{
								"answerText": "drawImage()",
								"isCorrect": "true"
							},
							{
								"answerText": "draw()",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 33,
				"title": "レッスン 17 - スペースゲーム - Adding Motion: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "Any object on the screen can receive keyboard events",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "You can use the same method to listen to key events and mouse events",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "To make things happen at a regular interval, you use what function?",
						"answerOptions": [
							{
								"answerText": "setInterval()",
								"isCorrect": "true"
							},
							{
								"answerText": "setTimeout()",
								"isCorrect": "false"
							},
							{
								"answerText": "sleep()",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 34,
				"title": "レッスン 17 - スペースゲーム - Adding Motion: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "You always need to redraw the screen",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "What is a game loop?",
						"answerOptions": [
							{
								"answerText": "A function that ensures the game can be restarted",
								"isCorrect": "false"
							},
							{
								"answerText": "A function that decided how fast the game should run",
								"isCorrect": "false"
							},
							{
								"answerText": "A function that is invoked at regular intervals and draws what the user should see",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "A good case for redrawing the screen is",
						"answerOptions": [
							{
								"answerText": "A user interaction happened",
								"isCorrect": "false"
							},
							{
								"answerText": "Something has moved",
								"isCorrect": "true"
							},
							{
								"answerText": "Time has passed",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 35,
				"title": "レッスン 18 - スペースゲーム - Adding A Laser and Detecting Collisions: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "Collision detection is how we detect if two things have collided",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "How can we remove an item from the screen?",
						"answerOptions": [
							{
								"answerText": "Call the garbage collector",
								"isCorrect": "false"
							},
							{
								"answerText": "Mark it as dead, only paint not dead objects next time we draw the screen",
								"isCorrect": "true"
							},
							{
								"answerText": "Place the item on a negative coordinate",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "A good way to simulate firing a laser in JavaScript is:",
						"answerOptions": [
							{
								"answerText": "make a visual element respond to a key event",
								"isCorrect": "true"
							},
							{
								"answerText": "create animated gifs",
								"isCorrect": "false"
							},
							{
								"answerText": "make enemies blow up at intervals",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 36,
				"title": "レッスン 18 - スペースゲーム - Adding A Laser and Detecting Collisions: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "In collision detection you compare two",
						"answerOptions": [
							{
								"answerText": "circles and whether they intersect",
								"isCorrect": "false"
							},
							{
								"answerText": "rectangles and whether they intersect",
								"isCorrect": "true"
							},
							{
								"answerText": "distances between two points",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "The reason for implementing a cooldown effect is because",
						"answerOptions": [
							{
								"answerText": "Making the game harder as you can't repeatedly fire a laser to destroy enemies",
								"isCorrect": "false"
							},
							{
								"answerText": "JavaScript can only produce a certain number of events per time unit, so you need to limit them",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "Constants are identifiable in code because",
						"answerOptions": [
							{
								"answerText": "they are written in capital letters",
								"isCorrect": "true"
							},
							{
								"answerText": "they have specific names",
								"isCorrect": "false"
							},
							{
								"answerText": "they are written in kebab-case like-this",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 37,
				"title": "レッスン 19 - スペースゲーム - Scoring and Lives: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "How do you draw text on a screen using the Canvas element?",
						"answerOptions": [
							{
								"answerText": "Place text inside a div or span element",
								"isCorrect": "false"
							},
							{
								"answerText": "Call drawText() on the Canvas element",
								"isCorrect": "false"
							},
							{
								"answerText": "Call fillText() on the context object",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "Why do you have the concept of 'lives' in a game?",
						"answerOptions": [
							{
								"answerText": "To show how much damage you can take",
								"isCorrect": "false"
							},
							{
								"answerText": "So that the game doesn't end straight away, but you have n number of chances before the game is over",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "Add color to text on Canvas using",
						"answerOptions": [
							{
								"answerText": "fillColor",
								"isCorrect": "false"
							},
							{
								"answerText": "fillStyle",
								"isCorrect": "true"
							},
							{
								"answerText": "textAlign",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 38,
				"title": "レッスン 19 - スペースゲーム - Scoring and Lives: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "What's a fun way to show how many lives a player has left?",
						"answerOptions": [
							{
								"answerText": "a number of ships",
								"isCorrect": "false"
							},
							{
								"answerText": "a points system",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "How do you center text in the middle of the screen using the Canvas element?",
						"answerOptions": [
							{
								"answerText": "You use Flexbox",
								"isCorrect": "false"
							},
							{
								"answerText": "You instruct the text to be drawn at the x coordinate of the client window width/2",
								"isCorrect": "true"
							},
							{
								"answerText": "You set the textAlign property to the value center on the context object",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "In code, deduct a life like this:",
						"answerOptions": [
							{
								"answerText": "this.life-",
								"isCorrect": "false"
							},
							{
								"answerText": "this.life--",
								"isCorrect": "true"
							},
							{
								"answerText": "this.life++",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 39,
				"title": "レッスン 20 - スペースゲーム - End and Restart: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "When is a good time to restart a game",
						"answerOptions": [
							{
								"answerText": "when a player wins or loses",
								"isCorrect": "true"
							},
							{
								"answerText": "whenever",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "When should a game end",
						"answerOptions": [
							{
								"answerText": "when an enemy ship is destroyed",
								"isCorrect": "false"
							},
							{
								"answerText": "when a hero ship is destroyed",
								"isCorrect": "true"
							},
							{
								"answerText": "when points are collected",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "A good way to add a level to your game is:",
						"answerOptions": [
							{
								"answerText": "Increment the amount of points necessary to complete a given level",
								"isCorrect": "true"
							},
							{
								"answerText": "Add more players to the game",
								"isCorrect": "false"
							},
							{
								"answerText": "Add more graphics to the game",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 40,
				"title": "レッスン 20 - スペースゲーム - End and Restart: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "What is a good pattern to use when a game end condition has been met?",
						"answerOptions": [
							{
								"answerText": "Display a suitable message",
								"isCorrect": "false"
							},
							{
								"answerText": "Quit the game",
								"isCorrect": "false"
							},
							{
								"answerText": "Display a suitable message, offer the player to restart, and display what key to hit for that action",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "You should offer a restart only when the game has ended",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "A good way to clear the EventEmitter when ending a game is:",
						"answerOptions": [
							{
								"answerText": "clearing listeners",
								"isCorrect": "true"
							},
							{
								"answerText": "clearing the screen",
								"isCorrect": "false"
							},
							{
								"answerText": "closing the game window",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 41,
				"title": "レッスン 21 - 銀行プロジェクト - HTML Templates and Routes in a Web App: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "You need to create multiple HTML files to display different screens in a web app",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "You can store and persist data locally in a web app",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "What's the best data provider for a web app?",
						"answerOptions": [
							{
								"answerText": "A local database",
								"isCorrect": "false"
							},
							{
								"answerText": "A JavaScript object",
								"isCorrect": "false"
							},
							{
								"answerText": "A server with a JSON API",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 42,
				"title": "レッスン 21 - 銀行プロジェクト - HTML Templates and Routes in a Web App: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "HTML templates are part of the DOM by default",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "Which part of the URL is needed for routing?",
						"answerOptions": [
							{
								"answerText": "window.location.pathname",
								"isCorrect": "false"
							},
							{
								"answerText": "window.location.origin",
								"isCorrect": "false"
							},
							{
								"answerText": "both",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "What's the name of the event triggered when calling the history.pushState() function?",
						"answerOptions": [
							{
								"answerText": "pushstate",
								"isCorrect": "false"
							},
							{
								"answerText": "popstate",
								"isCorrect": "true"
							},
							{
								"answerText": "navigate",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 43,
				"title": "レッスン 22 - 銀行プロジェクト - Build a Login and Registration Form: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "HTML forms allow you to send user input to a server without using JavaScript",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "<label> elements are mandatory for every form control",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "It is secure to send form data to a server over HTTP",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 44,
				"title": "レッスン 22 - 銀行プロジェクト - Build a Login and Registration Form: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "Using <label> elements in forms is only for making the form pretty",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "A URL is sent to a server in which part of a form?",
						"answerOptions": [
							{
								"answerText": "the action attribute",
								"isCorrect": "true"
							},
							{
								"answerText": "the method attribute",
								"isCorrect": "false"
							},
							{
								"answerText": "both",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "Which attribute can you use to set the maximum size of a text <input>?",
						"answerOptions": [
							{
								"answerText": "max",
								"isCorrect": "false"
							},
							{
								"answerText": "maxlength",
								"isCorrect": "true"
							},
							{
								"answerText": "pattern",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 45,
				"title": "レッスン 23 - 銀行プロジェクト - Methods of Fetching and Using Data: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "You usually fetch data from a server synchronously in a browser",
						"answerOptions": [
							{
								"answerText": "true, but async is best!",
								"isCorrect": "true"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "What's the most common format used to exchange data on the web?",
						"answerOptions": [
							{
								"answerText": "HTML",
								"isCorrect": "false"
							},
							{
								"answerText": "XML",
								"isCorrect": "false"
							},
							{
								"answerText": "JSON",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "There's no way to prevent a web page from accessing a public server API",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 46,
				"title": "レッスン 23 - 銀行プロジェクト - Methods of Fetching and Using Data: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "In a Single-page application, the HTML is loaded once and never updated",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "Why is it important to not trust data coming from user input?",
						"answerOptions": [
							{
								"answerText": "because using special characters can make the UI ugly.",
								"isCorrect": "false"
							},
							{
								"answerText": "because it can contain non-sense or offensive words.",
								"isCorrect": "false"
							},
							{
								"answerText": "because it can be used as vector of attack to execute malicious scripts.",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "What's the API name for sending asynchronous HTTP requests to a web server?",
						"answerOptions": [
							{
								"answerText": "request()",
								"isCorrect": "false"
							},
							{
								"answerText": "fetch()",
								"isCorrect": "true"
							},
							{
								"answerText": "ajax()",
								"isCorrect": "false"
							}
						]
					}
				]
			},
			{
				"id": 47,
				"title": "レッスン 24 - 銀行プロジェクト - Concepts of State Management: レッスン前の小テスト",
				"quiz": [
					{
						"questionText": "What is an immutable object?",
						"answerOptions": [
							{
								"answerText": "An object defined as a constant",
								"isCorrect": "false"
							},
							{
								"answerText": "An object that cannot be modified after it's created",
								"isCorrect": "true"
							},
							{
								"answerText": "A copy of an existing object",
								"isCorrect": "false"
							}
						]
					},
					{
						"questionText": "What benefit(s) do you get from using state management?",
						"answerOptions": [
							{
								"answerText": "You can keep track of every place the state is updated",
								"isCorrect": "false"
							},
							{
								"answerText": "It's easier to debug the code",
								"isCorrect": "false"
							},
							{
								"answerText": "All of the above",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "What's the best way to persist critical user data across different sessions?",
						"answerOptions": [
							{
								"answerText": "Using files",
								"isCorrect": "false"
							},
							{
								"answerText": "Using the browser's localStorage API",
								"isCorrect": "false"
							},
							{
								"answerText": "In a database behind a server API",
								"isCorrect": "true"
							}
						]
					}
				]
			},
			{
				"id": 48,
				"title": "レッスン 24 - 銀行プロジェクト - Concepts of State Management: レッスン後の小テスト",
				"quiz": [
					{
						"questionText": "What do you think state management means?",
						"answerOptions": [
							{
								"answerText": "Enforcement of law & order",
								"isCorrect": "false"
							},
							{
								"answerText": "Logging the user interface state over time",
								"isCorrect": "false"
							},
							{
								"answerText": "Keeping your app data flows clean and synchronizing the user interface with data",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "How can you keep track of the user session state?",
						"answerOptions": [
							{
								"answerText": "HTTP cookies",
								"isCorrect": "false"
							},
							{
								"answerText": "Local or session storage",
								"isCorrect": "false"
							},
							{
								"answerText": "All of the above",
								"isCorrect": "true"
							}
						]
					},
					{
						"questionText": "Mutating an object is always the best way to update it",
						"answerOptions": [
							{
								"answerText": "はい",
								"isCorrect": "false"
							},
							{
								"answerText": "いいえ",
								"isCorrect": "true"
							}
						]
					}
				]
			}
		]
	}
]
